name: Build BaseApp

on:
  push:
    tags:
      - "*base"

  workflow_dispatch:

jobs:
  flatter:
    name: Flatter
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/andyholmes/flatter/kde:5.15-22.08
      options: --privileged
    outputs:
      repository: ${{ steps.flatpak.outputs.repository }}

    strategy:
      matrix:
        arch: [x86_64]
      fail-fast: false
      # Only one job at a time can use the shared repository cache
      max-parallel: 1

    steps:
      # Checkout a repository with Flatpak manifests
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: realthunder/org.freecadweb.FreeCAD.Link.BaseApp
          submodules: true

      - name: Build
        id: flatpak
        uses: andyholmes/flatter@main
        with:
          files: |
            org.freecadweb.FreeCAD.Link.BaseApp.yaml
          arch: ${{ matrix.arch }}
          upload-bundles: true
          cache-key: FreeCAD-Link-BaseApp
          flatpak-builder-args: |
            --install-deps-from=flathub

  # See "Github Pages" below
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: flatter

    steps:
      - name: Prepare assets
        run: |
          tag=${{ github.ref_name }}
          tag=${tag%base2}
          name=`echo ${{ needs.flatter.outputs.repository }}/*.flatpak`
          echo "RELEASE_ASSETS=${name%.flatpak}"'*BaseApp.flatpak' >> $GITHUB_ENV
          echo "RELEASE_NAME=$tag" >> $GITHUB_ENV

      - name: Delete old release assets
        uses: realthunder/delete-release-assets@v1
        with:
          fail-if-no-assets: false
          fail-if-no-release: false
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.RELEASE_NAME }}
          assets: |
              ${{ env.RELEASE_ASSETS }}

      - name: Upload release
        if: startsWith(github.ref, 'refs/tags/')
        uses: realthunder/action-gh-release@v1
        with:
          files: ${{ env.RELEASE_ASSETS }}
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.RELEASE_NAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
